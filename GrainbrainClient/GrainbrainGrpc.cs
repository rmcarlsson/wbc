// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grainbrain.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Grpcproto {
  public static partial class McServer
  {
    static readonly string __ServiceName = "grpcproto.McServer";

    static readonly Marshaller<global::Grpcproto.LoadBrewProfileRequest> __Marshaller_LoadBrewProfileRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.LoadBrewProfileRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.SuccessReply> __Marshaller_SuccessReply = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.SuccessReply.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.StartStopRequest> __Marshaller_StartStopRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.StartStopRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.GrainsAddedNotify> __Marshaller_GrainsAddedNotify = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.GrainsAddedNotify.Parser.ParseFrom);
    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.SpargeDoneNotify> __Marshaller_SpargeDoneNotify = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.SpargeDoneNotify.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.WortChillerSanitizedDoneNotify> __Marshaller_WortChillerSanitizedDoneNotify = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.WortChillerSanitizedDoneNotify.Parser.ParseFrom);
    static readonly Marshaller<global::Grpcproto.BrewStatusReply> __Marshaller_BrewStatusReply = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpcproto.BrewStatusReply.Parser.ParseFrom);

    static readonly Method<global::Grpcproto.LoadBrewProfileRequest, global::Grpcproto.SuccessReply> __Method_LoadBrewProfile = new Method<global::Grpcproto.LoadBrewProfileRequest, global::Grpcproto.SuccessReply>(
        MethodType.Unary,
        __ServiceName,
        "LoadBrewProfile",
        __Marshaller_LoadBrewProfileRequest,
        __Marshaller_SuccessReply);

    static readonly Method<global::Grpcproto.StartStopRequest, global::Grpcproto.SuccessReply> __Method_StartStopAbort = new Method<global::Grpcproto.StartStopRequest, global::Grpcproto.SuccessReply>(
        MethodType.Unary,
        __ServiceName,
        "StartStopAbort",
        __Marshaller_StartStopRequest,
        __Marshaller_SuccessReply);

    static readonly Method<global::Grpcproto.GrainsAddedNotify, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GrainsAdded = new Method<global::Grpcproto.GrainsAddedNotify, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "GrainsAdded",
        __Marshaller_GrainsAddedNotify,
        __Marshaller_Empty);

    static readonly Method<global::Grpcproto.SpargeDoneNotify, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SpargeDone = new Method<global::Grpcproto.SpargeDoneNotify, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "SpargeDone",
        __Marshaller_SpargeDoneNotify,
        __Marshaller_Empty);

    static readonly Method<global::Grpcproto.WortChillerSanitizedDoneNotify, global::Google.Protobuf.WellKnownTypes.Empty> __Method_WortChillerSanitizedDone = new Method<global::Grpcproto.WortChillerSanitizedDoneNotify, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "WortChillerSanitizedDone",
        __Marshaller_WortChillerSanitizedDoneNotify,
        __Marshaller_Empty);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Grpcproto.BrewStatusReply> __Method_GetStatus = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Grpcproto.BrewStatusReply>(
        MethodType.Unary,
        __ServiceName,
        "GetStatus",
        __Marshaller_Empty,
        __Marshaller_BrewStatusReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpcproto.GrainbrainReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of McServer</summary>
    public abstract partial class McServerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Grpcproto.SuccessReply> LoadBrewProfile(global::Grpcproto.LoadBrewProfileRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpcproto.SuccessReply> StartStopAbort(global::Grpcproto.StartStopRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> GrainsAdded(global::Grpcproto.GrainsAddedNotify request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SpargeDone(global::Grpcproto.SpargeDoneNotify request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> WortChillerSanitizedDone(global::Grpcproto.WortChillerSanitizedDoneNotify request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpcproto.BrewStatusReply> GetStatus(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for McServer</summary>
    public partial class McServerClient : ClientBase<McServerClient>
    {
      /// <summary>Creates a new client for McServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public McServerClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for McServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public McServerClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected McServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected McServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Grpcproto.SuccessReply LoadBrewProfile(global::Grpcproto.LoadBrewProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LoadBrewProfile(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpcproto.SuccessReply LoadBrewProfile(global::Grpcproto.LoadBrewProfileRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoadBrewProfile, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpcproto.SuccessReply> LoadBrewProfileAsync(global::Grpcproto.LoadBrewProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LoadBrewProfileAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpcproto.SuccessReply> LoadBrewProfileAsync(global::Grpcproto.LoadBrewProfileRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoadBrewProfile, null, options, request);
      }
      public virtual global::Grpcproto.SuccessReply StartStopAbort(global::Grpcproto.StartStopRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StartStopAbort(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpcproto.SuccessReply StartStopAbort(global::Grpcproto.StartStopRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartStopAbort, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpcproto.SuccessReply> StartStopAbortAsync(global::Grpcproto.StartStopRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return StartStopAbortAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpcproto.SuccessReply> StartStopAbortAsync(global::Grpcproto.StartStopRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartStopAbort, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty GrainsAdded(global::Grpcproto.GrainsAddedNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GrainsAdded(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty GrainsAdded(global::Grpcproto.GrainsAddedNotify request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GrainsAdded, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> GrainsAddedAsync(global::Grpcproto.GrainsAddedNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GrainsAddedAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> GrainsAddedAsync(global::Grpcproto.GrainsAddedNotify request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GrainsAdded, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SpargeDone(global::Grpcproto.SpargeDoneNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SpargeDone(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SpargeDone(global::Grpcproto.SpargeDoneNotify request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SpargeDone, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SpargeDoneAsync(global::Grpcproto.SpargeDoneNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SpargeDoneAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SpargeDoneAsync(global::Grpcproto.SpargeDoneNotify request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SpargeDone, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty WortChillerSanitizedDone(global::Grpcproto.WortChillerSanitizedDoneNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return WortChillerSanitizedDone(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty WortChillerSanitizedDone(global::Grpcproto.WortChillerSanitizedDoneNotify request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_WortChillerSanitizedDone, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> WortChillerSanitizedDoneAsync(global::Grpcproto.WortChillerSanitizedDoneNotify request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return WortChillerSanitizedDoneAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> WortChillerSanitizedDoneAsync(global::Grpcproto.WortChillerSanitizedDoneNotify request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_WortChillerSanitizedDone, null, options, request);
      }
      public virtual global::Grpcproto.BrewStatusReply GetStatus(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetStatus(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpcproto.BrewStatusReply GetStatus(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStatus, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Grpcproto.BrewStatusReply> GetStatusAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetStatusAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Grpcproto.BrewStatusReply> GetStatusAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override McServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new McServerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static ServerServiceDefinition BindService(McServerBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_LoadBrewProfile, serviceImpl.LoadBrewProfile)
          .AddMethod(__Method_StartStopAbort, serviceImpl.StartStopAbort)
          .AddMethod(__Method_GrainsAdded, serviceImpl.GrainsAdded)
          .AddMethod(__Method_SpargeDone, serviceImpl.SpargeDone)
          .AddMethod(__Method_WortChillerSanitizedDone, serviceImpl.WortChillerSanitizedDone)
          .AddMethod(__Method_GetStatus, serviceImpl.GetStatus).Build();
    }

  }
}
#endregion
